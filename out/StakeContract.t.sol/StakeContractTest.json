{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockToken",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeContract",
      "outputs": [
        {
          "internalType": "contract StakeContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "amount",
          "type": "uint8"
        }
      ],
      "name": "testExample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b5061139a8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780631a1862271461007157806342ebb992146100a7578063ba414fa6146100ba578063cddf7dab146100d2578063fa7626d4146100e5575b600080fd5b61006f6100f2565b005b60005461008a906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60015461008a906001600160a01b031681565b6100c261018c565b604051901515815260200161009e565b61006f6100e03660046105c8565b6102b7565b6000546100c29060ff1681565b6040516100fe906105ae565b604051809103906000f08015801561011a573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060405161014d906105bb565b604051809103906000f080158015610169573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008054610100900460ff16156101ac5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102b25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161023a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161062d565b60408051601f198184030181529082905261025491610651565b6000604051808303816000865af19150503d8060008114610291576040519150601f19603f3d011682016040523d82523d6000602084013e610296565b606091505b50915050808060200190518101906102ae919061065d565b9150505b919050565b60015460005460405163095ea7b360e01b81526001600160a01b03620100009092048216600482015260ff8416602482015291169063095ea7b3906044016020604051808303816000875af1158015610314573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610338919061065d565b5060008054600154604051637acb775760e01b815260ff851660048201526001600160a01b039182166024820152620100009092041690637acb7757906044016020604051808303816000875af1158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb919061065d565b6040516301f7b4f360e41b815260376004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d90631f7b4f3090602401600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b5050505061042c81610430565b5050565b806104a4577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104949060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16104a46104a7565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561059d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b92820192909252600160608201527f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261053d929160200161062d565b60408051601f198184030181529082905261055791610651565b6000604051808303816000865af19150503d8060008114610594576040519150601f19603f3d011682016040523d82523d6000602084013e610599565b606091505b5050505b6000805461ff001916610100179055565b6102308061068083390190565b610ade806108b083390190565b6000602082840312156105da57600080fd5b813560ff811681146105eb57600080fd5b9392505050565b6000815160005b8181101561061357602081850181015186830152016105f9565b81811115610622576000828601525b509290920192915050565b6001600160e01b031983168152600061064960048301846105f2565b949350505050565b60006105eb82846105f2565b60006020828403121561066f57600080fd5b815180151581146105eb57600080fdfe608060405234801561001057600080fd5b50610210806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637acb77571461003b578063ab32eb6914610063575b600080fd5b61004e610049366004610174565b610091565b60405190151581526020015b60405180910390f35b6100836100713660046101a0565b60006020819052908152604090205481565b60405190815260200161005a565b336000908152602081905260408120805484919083906100b29084906101bb565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018490526000906001600160a01b038416906323b872dd906064016020604051808303816000875af115801561010d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013191906101e1565b905080610151576040516312171d8360e31b815260040160405180910390fd5b9392505050565b80356001600160a01b038116811461016f57600080fd5b919050565b6000806040838503121561018757600080fd5b8235915061019760208401610158565b90509250929050565b6000602082840312156101b257600080fd5b61015182610158565b600082198211156101dc57634e487b7160e01b600052601160045260246000fd5b500190565b6000602082840312156101f357600080fd5b8151801515811461015157600080fdfea164736f6c634300080a000a608060405234801561001057600080fd5b50604080518082018252600a81526904d6f636b2045524332360b41b6020808301918252835180850190945260048452634d45524360e01b90840152815191929161005d91600391610176565b508051610071906004906020840190610176565b50505061008e3369d3c21bcecceda100000061009360201b60201c565b610270565b6001600160a01b0382166100ed5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546100ff919061020f565b90915550506001600160a01b0382166000908152602081905260408120805483929061012c90849061020f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805461018290610235565b90600052602060002090601f0160209004810192826101a457600085556101ea565b82601f106101bd57805160ff19168380011785556101ea565b828001600101855582156101ea579182015b828111156101ea5782518255916020019190600101906101cf565b506101f69291506101fa565b5090565b5b808211156101f657600081556001016101fb565b6000821982111561023057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061024957607f821691505b6020821081141561026a57634e487b7160e01b600052602260045260246000fd5b50919050565b61085e80620002806000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080a000aa164736f6c634300080a000a",
    "sourceMap": "184:540:6:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;184:540:6;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "184:540:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;361:113;;;:::i;:::-;;287:34;;;;;;;;-1:-1:-1;;;;;287:34:6;;;;;;-1:-1:-1;;;;;200:32:9;;;182:51;;170:2;155:18;287:34:6;;;;;;;;327:26;;;;;-1:-1:-1;;;;;327:26:6;;;1819:584:0;;;:::i;:::-;;;635:14:9;;628:22;610:41;;598:2;583:18;1819:584:0;470:187:9;480:242:6;;;;;;:::i;:::-;;:::i;1572:26:0:-;;;;;;;;;361:113:6;411:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;395:13;;:35;;;;;-1:-1:-1;;;;;395:35:6;;;;;-1:-1:-1;;;;;395:35:6;;;;;;452:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;440:9:6;:27;;-1:-1:-1;;;;;;440:27:6;-1:-1:-1;;;;;440:27:6;;;;;;;;;;361:113::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2924:42;2912:55;2993:16;1980:374;;2196:43;;;1671:64;2196:43;;;1110:51:9;;;-1:-1:-1;;;1177:18:9;;;1170:34;2196:43:0;;;;;;;;;1083:18:9;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;480:242:6:-;532:9;;;558:13;532:49;;-1:-1:-1;;;532:49:6;;-1:-1:-1;;;;;558:13:6;;;;;;532:49;;;2487:51:9;2586:4;2574:17;;2554:18;;;2547:45;532:9:6;;;:17;;2460:18:9;;532:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;591:16:6;610:13;;646:9;;610:47;;-1:-1:-1;;;610:47:6;;2805:4:9;2793:17;;610:47:6;;;2775:36:9;-1:-1:-1;;;;;646:9:6;;;2827:18:9;;;2820:60;610:13:6;;;;;;:19;;2748:18:9;;610:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;667:15;;-1:-1:-1;;;667:15:6;;679:2;667:15;;;3046:25:9;591:66:6;;-1:-1:-1;1671:64:0;;667:11:6;;3019:18:9;;667:15:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;692:23;703:11;692:10;:23::i;:::-;522:200;480:242;:::o;3189:157:0:-;3249:9;3244:96;;3279:30;;;;;3284:2:9;3266:21;;;3323:2;3303:18;;;3296:30;3362:25;3357:2;3342:18;;3335:53;3420:2;3405:18;;3082:347;3279:30:0;;;;;;;;3323:6;:4;:6::i;:::-;3189:157;:::o;2410:358::-;2924:42;2912:55;2993:16;2445:293;;2627:67;;;1671:64;2627:67;;;3636:51:9;;;-1:-1:-1;;;3703:18:9;;;3696:34;;;;2687:4:0;3746:18:9;;;3739:34;2561:43:0;;3609:18:9;;2627:67:0;;;-1:-1:-1;;2627:67:0;;;;;;;;;;2516:196;;;2627:67;2516:196;;:::i;:::-;;;;-1:-1:-1;;2516:196:0;;;;;;;;;;2481:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2445:293;2747:7;:14;;-1:-1:-1;;2747:14:0;;;;;2410:358::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;662:269:9:-;719:6;772:2;760:9;751:7;747:23;743:32;740:52;;;788:1;785;778:12;740:52;827:9;814:23;877:4;870:5;866:16;859:5;856:27;846:55;;897:1;894;887:12;846:55;920:5;662:269;-1:-1:-1;;;662:269:9:o;1215:336::-;1256:3;1294:5;1288:12;1318:1;1328:128;1342:6;1339:1;1336:13;1328:128;;;1439:4;1424:13;;;1420:24;;1414:31;1401:11;;;1394:52;1357:12;1328:128;;;1474:6;1471:1;1468:13;1465:48;;;1509:1;1500:6;1495:3;1491:16;1484:27;1465:48;-1:-1:-1;1529:16:9;;;;;1215:336;-1:-1:-1;;1215:336:9:o;1556:278::-;-1:-1:-1;;;;;;1741:33:9;;1729:46;;1711:3;1791:37;1825:1;1816:11;;1808:6;1791:37;:::i;:::-;1784:44;1556:278;-1:-1:-1;;;;1556:278:9:o;1839:189::-;1968:3;1993:29;2018:3;2010:6;1993:29;:::i;2033:277::-;2100:6;2153:2;2141:9;2132:7;2128:23;2124:32;2121:52;;;2169:1;2166;2159:12;2121:52;2201:9;2195:16;2254:5;2247:13;2240:21;2233:5;2230:32;2220:60;;2276:1;2273;2266:12",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/user/Desktop/Foundry/src/test/StakeContract.t.sol",
    "exportedSymbols": {
      "Cheats": [
        2686
      ],
      "Context": [
        2494
      ],
      "DSTest": [
        1783
      ],
      "ERC20": [
        2369
      ],
      "IERC20": [
        2447
      ],
      "IERC20Metadata": [
        2472
      ],
      "MockERC20": [
        2640
      ],
      "StakeContract": [
        2544
      ],
      "StakeContractTest": [
        2620
      ],
      "TransferFailed": [
        2499
      ]
    },
    "id": 2621,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2546,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:6"
      },
      {
        "absolutePath": "/Users/user/Desktop/Foundry/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 2547,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2621,
        "sourceUnit": 1784,
        "src": "63:26:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/user/Desktop/Foundry/src/StakeContract.sol",
        "file": "../StakeContract.sol",
        "id": 2548,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2621,
        "sourceUnit": 2545,
        "src": "90:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/user/Desktop/Foundry/src/test/mocks/MockERC20.sol",
        "file": "./mocks/MockERC20.sol",
        "id": 2549,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2621,
        "sourceUnit": 2641,
        "src": "121:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/user/Desktop/Foundry/src/test/utils/Cheats.sol",
        "file": "./utils/Cheats.sol",
        "id": 2550,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2621,
        "sourceUnit": 2687,
        "src": "153:28:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2551,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1783,
              "src": "214:6:6"
            },
            "id": 2552,
            "nodeType": "InheritanceSpecifier",
            "src": "214:6:6"
          }
        ],
        "canonicalName": "StakeContractTest",
        "contractDependencies": [
          2544,
          2640
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2620,
        "linearizedBaseContracts": [
          2620,
          1783
        ],
        "name": "StakeContractTest",
        "nameLocation": "193:17:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 2558,
            "mutability": "constant",
            "name": "cheats",
            "nameLocation": "252:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 2620,
            "src": "227:54:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Cheats_$2686",
              "typeString": "contract Cheats"
            },
            "typeName": {
              "id": 2554,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2553,
                "name": "Cheats",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2686,
                "src": "227:6:6"
              },
              "referencedDeclaration": 2686,
              "src": "227:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cheats_$2686",
                "typeString": "contract Cheats"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 2556,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "268:12:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2555,
                "name": "Cheats",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2686,
                "src": "261:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Cheats_$2686_$",
                  "typeString": "type(contract Cheats)"
                }
              },
              "id": 2557,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "261:20:6",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cheats_$2686",
                "typeString": "contract Cheats"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1a186227",
            "id": 2561,
            "mutability": "mutable",
            "name": "stakeContract",
            "nameLocation": "308:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 2620,
            "src": "287:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakeContract_$2544",
              "typeString": "contract StakeContract"
            },
            "typeName": {
              "id": 2560,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2559,
                "name": "StakeContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2544,
                "src": "287:13:6"
              },
              "referencedDeclaration": 2544,
              "src": "287:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakeContract_$2544",
                "typeString": "contract StakeContract"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42ebb992",
            "id": 2564,
            "mutability": "mutable",
            "name": "mockToken",
            "nameLocation": "344:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 2620,
            "src": "327:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$2640",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 2563,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2562,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2640,
                "src": "327:9:6"
              },
              "referencedDeclaration": 2640,
              "src": "327:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2640",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2581,
              "nodeType": "Block",
              "src": "385:89:6",
              "statements": [
                {
                  "expression": {
                    "id": 2572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2567,
                      "name": "stakeContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "395:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakeContract_$2544",
                        "typeString": "contract StakeContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "411:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_StakeContract_$2544_$",
                          "typeString": "function () returns (contract StakeContract)"
                        },
                        "typeName": {
                          "id": 2569,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2568,
                            "name": "StakeContract",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2544,
                            "src": "415:13:6"
                          },
                          "referencedDeclaration": 2544,
                          "src": "415:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakeContract_$2544",
                            "typeString": "contract StakeContract"
                          }
                        }
                      },
                      "id": 2571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "411:19:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakeContract_$2544",
                        "typeString": "contract StakeContract"
                      }
                    },
                    "src": "395:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakeContract_$2544",
                      "typeString": "contract StakeContract"
                    }
                  },
                  "id": 2573,
                  "nodeType": "ExpressionStatement",
                  "src": "395:35:6"
                },
                {
                  "expression": {
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2574,
                      "name": "mockToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "440:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2640",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "452:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$2640_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 2576,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2575,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2640,
                            "src": "456:9:6"
                          },
                          "referencedDeclaration": 2640,
                          "src": "456:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$2640",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 2578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "452:15:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2640",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "440:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2640",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "440:27:6"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 2582,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "370:5:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:2:6"
            },
            "returnParameters": {
              "id": 2566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:6"
            },
            "scope": 2620,
            "src": "361:113:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2618,
              "nodeType": "Block",
              "src": "522:200:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2592,
                            "name": "stakeContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2561,
                            "src": "558:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeContract_$2544",
                              "typeString": "contract StakeContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeContract_$2544",
                              "typeString": "contract StakeContract"
                            }
                          ],
                          "id": 2591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "550:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "550:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "550:22:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2594,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "574:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 2587,
                        "name": "mockToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "532:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2640",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1950,
                      "src": "532:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "532:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2596,
                  "nodeType": "ExpressionStatement",
                  "src": "532:49:6"
                },
                {
                  "assignments": [
                    2598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2598,
                      "mutability": "mutable",
                      "name": "stakePassed",
                      "nameLocation": "596:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2618,
                      "src": "591:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2597,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "591:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2607,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2601,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "630:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2604,
                            "name": "mockToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2564,
                            "src": "646:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$2640",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$2640",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "638:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2602,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "638:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "638:18:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2599,
                        "name": "stakeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2561,
                        "src": "610:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeContract_$2544",
                          "typeString": "contract StakeContract"
                        }
                      },
                      "id": 2600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2543,
                      "src": "610:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) external returns (bool)"
                      }
                    },
                    "id": 2606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "591:66:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3535",
                        "id": 2611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "679:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_55_by_1",
                          "typeString": "int_const 55"
                        },
                        "value": "55"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_55_by_1",
                          "typeString": "int_const 55"
                        }
                      ],
                      "expression": {
                        "id": 2608,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "667:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$2686",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 2610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2652,
                      "src": "667:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2613,
                  "nodeType": "ExpressionStatement",
                  "src": "667:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2615,
                        "name": "stakePassed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2598,
                        "src": "703:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2614,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        266,
                        287
                      ],
                      "referencedDeclaration": 266,
                      "src": "692:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:23:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2617,
                  "nodeType": "ExpressionStatement",
                  "src": "692:23:6"
                }
              ]
            },
            "functionSelector": "cddf7dab",
            "id": 2619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExample",
            "nameLocation": "489:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2584,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "507:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2619,
                  "src": "501:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2583,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "500:14:6"
            },
            "returnParameters": {
              "id": 2586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:6"
            },
            "scope": 2620,
            "src": "480:242:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2621,
        "src": "184:540:6",
        "usedErrors": []
      }
    ],
    "src": "38:686:6"
  }
}